version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - pip install awscli
      - CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain rayoo-domain --domain-owner 047403811176 --query authorizationToken --output text)
      - CODEARTIFACT_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint --domain rayoo-domain --repository ${CODEARTIFACT_REPOSITORY_NAME} --format pypi --output text)
      - pip install -r ./configuration/requirements.txt --quiet

  pre_build:
    commands:
      - echo "Starting Unit tests..."
      - pytest Backend/tests/UT_src  # ユニットテストの実行
      - echo "Unit tests Completed..."

  build:
    commands:
      - ls Backend
      - ls Backend/src
      - ls configuration
      - zip -r ${ProjectName}.zip ./Backend/src  # Lambdaファンクションのソースコードをzipファイルにパッケージ化

  post_build:
    commands:
      - aws lambda update-function-code --function-name ${ProjectName} --zip-file fileb://${ProjectName}.zip  # Lambdaファンクションのコードを更新
      - aws s3 cp configuration/buildspec.yml s3://${ProjectName}/configuration/  # buildspec.ymlをS3にコピー
      - aws s3 cp configuration/requirements.txt s3://${ProjectName}/configuration/  # requirements.txtをS3にコピー
      - echo "Starting appspec.yml create process..."
      - ALIAS=$(aws lambda list-aliases --function-name ${ProjectName} --query 'Aliases[?FunctionVersion!=`$LATEST`].Name' --output text)  # 現在のエイリアス名を取得
      - CURRENT_VERSION=$(aws lambda get-alias --function-name ${ProjectName} --name $ALIAS --query 'FunctionVersion' --output text)  # 現在のバージョンを取得
      - TARGET_VERSION=$(aws lambda publish-version --function-name ${ProjectName} --description "New version" --query 'Version' --output text)  # 新しいバージョンを公開
      - sed -i "s/{{Name}}/${ProjectName}/g"              configuration/appspec.yml  # appspec.ymlのプレースホルダーを置換
      - sed -i "s/{{Alias}}/$ALIAS/g"                     configuration/appspec.yml
      - sed -i "s/{{CurrentVersion}}/$CURRENT_VERSION/g"  configuration/appspec.yml
      - sed -i "s/{{TargetVersion}}/$TARGET_VERSION/g"    configuration/appspec.yml
      - cat configuration/appspec.yml  # appspec.ymlの内容を表示
      - cp  configuration/appspec.yml .  # appspec.ymlをカレントディレクトリにコピー
      - ls
      - aws s3 cp configuration/appspec.yml s3://${ProjectName}/configuration/  # appspec.ymlをS3にコピー

reports:
  pytest_reports:
    files:
      - "pytest-report.xml"  # pytestレポートファイル
    file-format: "JUNITXML"  # レポートのファイル形式

artifacts:
  files:
    - ${ProjectName}.zip  # ビルド成果物（Lambdaファンクションのzipファイル）
    - appspec.yml  # CodeDeployで使用するappspec.ymlファイル
  name: BuildOutput  # ビルド成果物の名前
